#!/bin/bash

# Dynamic Full Template Demo Script for scroll-cast
# YAML„Éï„Ç°„Ç§„É´„Åã„ÇâËá™ÂãïÁöÑ„Å´„ÉÜ„É≥„Éó„É¨„Éº„Éà„Éª„Éó„É™„Çª„ÉÉ„Éà„ÇíË™≠„ÅøÂèñ„Çä‰∏ÄÊã¨ÂÆüË°å
# Usage: ./test/dynamic_full_demo.sh [input_file]

# „Éá„Éï„Ç©„É´„ÉàÂÄ§
INPUT_FILE=${1:-"test/sample_eng.txt"}
OUTPUT_DIR="../contents"
CONFIG_DIR="config"

# „Éò„É´„ÉóË°®Á§∫
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "üé¨ Dynamic Full Template Demo Script for scroll-cast"
    echo
    echo "YAML„Éï„Ç°„Ç§„É´„Åã„ÇâËá™ÂãïÁöÑ„Å´ÂÖ®„ÉÜ„É≥„Éó„É¨„Éº„Éà„Éª„Éó„É™„Çª„ÉÉ„Éà„ÇíË™≠„ÅøÂèñ„Çä‰∏ÄÊã¨ÂÆüË°å"
    echo
    echo "Usage: $0 [input_file]"
    echo
    echo "Arguments:"
    echo "  input_file   Input text file (default: test/sample_eng.txt)"
    echo
    echo "ÂãïÁöÑÊ§úÂá∫Ê©üËÉΩ:"
    echo "  - $CONFIG_DIR/ „Åã„Çâ *.yaml „Éï„Ç°„Ç§„É´„ÇíËá™ÂãïÊ§úÂá∫"
    echo "  - ÂêÑYAML„Éï„Ç°„Ç§„É´„Åã„Çâ presets „ÇíËá™ÂãïÊäΩÂá∫"
    echo "  - „ÉÜ„É≥„Éó„É¨„Éº„Éà„Éª„Éó„É™„Çª„ÉÉ„ÉàËøΩÂä†ÊôÇ„ÅÆÊâãÂãïÊõ¥Êñ∞‰∏çË¶Å"
    echo
    echo "Output:"
    echo "  üìÅ Directory: $OUTPUT_DIR/"
    echo "  üåê HTML files: demo_[template]_[preset].html"
    echo "  üìù ASS files:  demo_[template]_[preset].ass"
    echo
    exit 0
fi

# ÂÖ•Âäõ„Éï„Ç°„Ç§„É´„ÅÆÂ≠òÂú®Á¢∫Ë™ç
if [ ! -f "$INPUT_FILE" ]; then
    echo "‚ùå Error: Input file '$INPUT_FILE' not found"
    exit 1
fi

# „ÉÜ„Çπ„Éà„Çπ„ÇØ„É™„Éó„Éà„ÅÆÂ≠òÂú®Á¢∫Ë™ç
if [ ! -f "./test/generate_scrollcast_with_config.sh" ]; then
    echo "‚ùå Error: './test/generate_scrollcast_with_config.sh' script not found"
    echo "Please run this script from the project root directory"
    exit 1
fi

# Ë®≠ÂÆö„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅÆÂ≠òÂú®Á¢∫Ë™ç
if [ ! -d "$CONFIG_DIR" ]; then
    echo "‚ùå Error: Configuration directory '$CONFIG_DIR' not found"
    exit 1
fi

# Âá∫Âäõ„Éï„Ç©„É´„ÉÄ„ÅÆ‰ΩúÊàê
mkdir -p "$OUTPUT_DIR/html" "$OUTPUT_DIR/ass"

echo "üé¨ Dynamic Full Template Demo - YAML„Éô„Éº„ÇπËá™ÂãïÂÆüË°å"
echo "   Input: $INPUT_FILE"
echo "   Config Directory: $CONFIG_DIR/"
echo "   Output Directory: $OUTPUT_DIR/"
echo

# ÂÆüË°åÁµêÊûú„ÇíË®òÈå≤„Åô„ÇãÈÖçÂàó
declare -a RESULTS
declare -a DURATIONS
declare -a FILENAMES

# ÂÆüË°åÊôÇÈñìË®àÊ∏¨Èñ¢Êï∞
measure_time() {
    local start_time=$(date +%s)
    "$@" > /tmp/template_output.log 2>&1
    local exit_code=$?
    local end_time=$(date +%s)
    local duration=$((end_time - start_time))
    echo $duration
    return $exit_code
}

# YAML„Éï„Ç°„Ç§„É´„Åã„Çâ„ÉÜ„É≥„Éó„É¨„Éº„ÉàÂêç„ÇíÊäΩÂá∫„Åô„ÇãÈñ¢Êï∞
extract_template_name() {
    local yaml_file="$1"
    grep "^template_name:" "$yaml_file" | sed 's/template_name: *//' | tr -d '"'
}

# YAML„Éï„Ç°„Ç§„É´„Åã„Çâ„Éó„É™„Çª„ÉÉ„ÉàÂêç„ÇíÊäΩÂá∫„Åô„ÇãÈñ¢Êï∞
extract_preset_names() {
    local yaml_file="$1"
    # presets„Çª„ÇØ„Ç∑„Éß„É≥ÂÜÖ„ÅÆname„Éï„Ç£„Éº„É´„Éâ„ÇíÊäΩÂá∫Ôºà‰∏°Êñπ„ÅÆÂΩ¢Âºè„Å´ÂØæÂøúÔºâ
    local names1=$(sed -n '/^presets:/,$p' "$yaml_file" | grep "^ *- name:" | sed 's/^ *- name: *//g' | sed 's/^"//g' | sed 's/"$//g')
    local names2=$(sed -n '/^presets:/,$p' "$yaml_file" | grep "^ *name:" | sed 's/^ *name: *//g' | sed 's/^"//g' | sed 's/"$//g')
    
    # ‰∏°Êñπ„ÅÆÁµêÊûú„ÇíÁµêÂêàÔºàÈáçË§áÈô§ÂéªÔºâ
    echo -e "$names1\n$names2" | grep -v "^$" | sort -u
}

# „ÉÜ„É≥„Éó„É¨„Éº„Éà„Å®„Éó„É™„Çª„ÉÉ„Éà„ÇíÂãïÁöÑ„Å´ÂèéÈõÜ
echo "üîç YAML„Éï„Ç°„Ç§„É´„Åã„ÇâË®≠ÂÆö„ÇíÂãïÁöÑË™≠„ÅøËæº„Åø‰∏≠..."

declare -a template_preset_list
template_count=0
preset_total=0

for yaml_file in "$CONFIG_DIR"/*.yaml; do
    if [ -f "$yaml_file" ]; then
        template_name=$(extract_template_name "$yaml_file")
        
        # template_name„ÅåÊúâÂäπ„Å™Â†¥Âêà„ÅÆ„ÅøÂá¶ÁêÜ
        if [ -n "$template_name" ] && [ "$template_name" != "null" ]; then
            preset_names=($(extract_preset_names "$yaml_file"))
            preset_count=${#preset_names[@]}
            
            if [ $preset_count -gt 0 ]; then
                echo "   üìù $template_name: $preset_count „Éó„É™„Çª„ÉÉ„Éà (${preset_names[*]})"
                ((template_count++))
                preset_total=$((preset_total + preset_count))
                
                # „ÉÜ„É≥„Éó„É¨„Éº„Éà„Éª„Éó„É™„Çª„ÉÉ„ÉàÁµÑ„ÅøÂêà„Çè„Åõ„Çí„É™„Çπ„Éà„Å´ËøΩÂä†
                for preset in "${preset_names[@]}"; do
                    template_preset_list+=("$template_name $preset")
                done
            else
                echo "   ‚ö†Ô∏è  $template_name: „Éó„É™„Çª„ÉÉ„Éà„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
            fi
        fi
    fi
done

total_count=${#template_preset_list[@]}

if [ $total_count -eq 0 ]; then
    echo "‚ùå Error: ÊúâÂäπ„Å™„ÉÜ„É≥„Éó„É¨„Éº„Éà„Éª„Éó„É™„Çª„ÉÉ„Éà„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü"
    echo "   - $CONFIG_DIR/*.yaml „Éï„Ç°„Ç§„É´„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
    echo "   - template_name „Å® presets „ÅåÊ≠£„Åó„ÅèÂÆöÁæ©„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
    exit 1
fi

echo
echo "üìä Ê§úÂá∫ÁµêÊûú:"
echo "   „ÉÜ„É≥„Éó„É¨„Éº„ÉàÊï∞: $template_count"
echo "   Á∑è„Éó„É™„Çª„ÉÉ„ÉàÊï∞: $preset_total"
echo "   ÂÆüË°å„Éë„Çø„Éº„É≥Êï∞: $total_count"
echo

echo "üìù ÂÆüË°åÈñãÂßã..."
echo "=================================================================="

index=0
success_count=0

# ÂêÑ„ÉÜ„É≥„Éó„É¨„Éº„Éà„Éª„Éó„É™„Çª„ÉÉ„Éà„ÇíÂÆüË°å
for item in "${template_preset_list[@]}"; do
    # „Çπ„Éö„Éº„Çπ„ÅßÂàÜÂâ≤
    template=$(echo "$item" | cut -d' ' -f1)
    preset=$(echo "$item" | cut -d' ' -f2)
    
    ((index++))
    echo "üî• [$index/$total_count] $template - $preset „Éó„É™„Çª„ÉÉ„Éà"
    
    filename="demo_${template}_${preset}"
    html_output="$OUTPUT_DIR/html/${filename}.html"
    ass_output="$OUTPUT_DIR/ass/${filename}.ass"
    
    # scroll-castÁîüÊàê„Çπ„ÇØ„É™„Éó„Éà„ÇíÂÆüË°å
    EXEC_TIME=$(measure_time ./test/generate_scrollcast_with_config.sh "$template" "$preset" "$INPUT_FILE" "$filename")
    execution_status=$?
    
    if [ $execution_status -eq 0 ]; then
        # ÁîüÊàê„Åï„Çå„Åü„Éï„Ç°„Ç§„É´„Çí„Éá„É¢„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´ÁßªÂãï
        copy_success=true
        
        if [ -f "contents/html/${filename}.html" ]; then
            cp "contents/html/${filename}.html" "$html_output"
        else
            echo "   ‚ö†Ô∏è  HTML„Éï„Ç°„Ç§„É´„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
            copy_success=false
        fi
        
        if [ -f "contents/ass/${filename}.ass" ]; then
            cp "contents/ass/${filename}.ass" "$ass_output"
        else
            echo "   ‚ö†Ô∏è  ASS„Éï„Ç°„Ç§„É´„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
            copy_success=false
        fi
        
        # ÂÖ±Êúâ„Ç¢„Çª„ÉÉ„Éà„Éï„Ç°„Ç§„É´„Çí„Ç≥„Éî„ÉºÔºàÂ§ñÈÉ®JavaScriptÂèÇÁÖß„Ç∑„Çπ„ÉÜ„É†Áî®Ôºâ
        if [ -d "contents/html/shared" ]; then
            mkdir -p "$OUTPUT_DIR/html/shared"
            cp -r "contents/html/shared/"* "$OUTPUT_DIR/html/shared/" 2>/dev/null || true
        fi
        
        if [ -d "contents/html/assets" ]; then
            mkdir -p "$OUTPUT_DIR/html/assets"
            cp -r "contents/html/assets/"* "$OUTPUT_DIR/html/assets/" 2>/dev/null || true
        fi
        
        if [ -d "contents/html/templates" ]; then
            mkdir -p "$OUTPUT_DIR/html/templates"
            cp -r "contents/html/templates/"* "$OUTPUT_DIR/html/templates/" 2>/dev/null || true
        fi
        
        if [ "$copy_success" = true ]; then
            RESULTS[$index]="‚úÖ ÊàêÂäü"
            DURATIONS[$index]="${EXEC_TIME}Áßí"
            FILENAMES[$index]="$filename"
            echo "   ‚úÖ ÁîüÊàêÂÆå‰∫Ü: $html_output"
            ((success_count++))
        else
            RESULTS[$index]="‚ùå Â§±Êïó(„Ç≥„Éî„Éº)"
            DURATIONS[$index]="${EXEC_TIME}Áßí"
            FILENAMES[$index]="$filename"
            echo "   ‚ùå „Éï„Ç°„Ç§„É´„Ç≥„Éî„ÉºÂ§±Êïó"
        fi
    else
        RESULTS[$index]="‚ùå Â§±Êïó"
        DURATIONS[$index]="${EXEC_TIME}Áßí"
        FILENAMES[$index]="$filename"
        echo "   ‚ùå ÁîüÊàêÂ§±Êïó (Ë©≥Á¥∞: /tmp/template_output.log)"
    fi
    
    # ÈÄ≤ÊçóË°®Á§∫
    if [ $((index % 5)) -eq 0 ]; then
        echo "   üìä ÈÄ≤Êçó: $index/$total_count ÂÆå‰∫Ü ($success_count ÊàêÂäü)"
    fi
    echo
done

echo "=================================================================="
echo "üéØ ÂãïÁöÑÂÖ®„ÉÜ„É≥„Éó„É¨„Éº„ÉàÂÆüË°åÂÆå‰∫Ü!"

# ÂÆüË°åÁµêÊûú„Çµ„Éû„É™„Éº
echo
echo "üìä ÂÆüË°åÁµêÊûú„Çµ„Éû„É™„Éº:"
echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
echo "‚îÇ „ÉÜ„É≥„Éó„É¨„Éº„Éà_„Éó„É™„Çª„ÉÉ„Éà             ‚îÇ ÁµêÊûú     ‚îÇ ÂÆüË°åÊôÇÈñì ‚îÇ"
echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"

for i in $(seq 1 $index); do
    if [ -n "${FILENAMES[$i]}" ]; then
        printf "‚îÇ %-35s ‚îÇ %-8s ‚îÇ %-8s ‚îÇ\n" "${FILENAMES[$i]}" "${RESULTS[$i]}" "${DURATIONS[$i]}"
    fi
done

echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"

# ÁîüÊàê„Åï„Çå„Åü„Éï„Ç°„Ç§„É´‰∏ÄË¶ß
echo
echo "üìÅ ÁîüÊàê„Åï„Çå„Åü„Éï„Ç°„Ç§„É´:"
if [ -d "$OUTPUT_DIR/html" ]; then
    html_count=$(find "$OUTPUT_DIR/html" -name "demo_*.html" | wc -l)
    ass_count=$(find "$OUTPUT_DIR/ass" -name "demo_*.ass" | wc -l)
    
    echo "   üåê HTML „Éá„Ç£„É¨„ÇØ„Éà„É™: $OUTPUT_DIR/html/ ($html_count „Éï„Ç°„Ç§„É´)"
    for file in "$OUTPUT_DIR/html"/demo_*.html; do
        if [ -f "$file" ]; then
            size=$(ls -lh "$file" | awk '{print $5}')
            basename_file=$(basename "$file")
            echo "      $basename_file ($size)"
        fi
    done
    
    echo "   üìù ASS „Éá„Ç£„É¨„ÇØ„Éà„É™: $OUTPUT_DIR/ass/ ($ass_count „Éï„Ç°„Ç§„É´)"
    for file in "$OUTPUT_DIR/ass"/demo_*.ass; do
        if [ -f "$file" ]; then
            lines=$(grep -c "Dialogue:" "$file" 2>/dev/null || echo "0")
            basename_file=$(basename "$file")
            echo "      $basename_file (${lines} dialogues)"
        fi
    done
else
    echo "   ‚ö†Ô∏è  Âá∫Âäõ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
fi

echo
echo "üìà Áµ±Ë®àÊÉÖÂ†±:"
echo "   ‚úÖ ÊàêÂäü: $success_count/$total_count"
echo "   ‚ùå Â§±Êïó: $((total_count - success_count))/$total_count"
echo "   üéØ ÊàêÂäüÁéá: $(( (success_count * 100) / total_count ))%"

if [ $success_count -eq $total_count ]; then
    echo
    echo "üéâ ÂÖ®„ÉÜ„É≥„Éó„É¨„Éº„Éà„Éª„Éó„É™„Çª„ÉÉ„Éà ($success_count/$total_count) „ÅåÊ≠£Â∏∏„Å´ÁîüÊàê„Åï„Çå„Åæ„Åó„ÅüÔºÅ"
    echo
    echo "üí° Next steps:"
    echo "   - „Éñ„É©„Ç¶„Ç∂„Åß $OUTPUT_DIR/html/ „ÅÆHTML„Éï„Ç°„Ç§„É´„ÇíÈñã„ÅÑ„Å¶„ÉÜ„Çπ„Éà"
    echo "   - Êñ∞„Åó„ÅÑ„ÉÜ„É≥„Éó„É¨„Éº„Éà„Éª„Éó„É™„Çª„ÉÉ„Éà„ÇíËøΩÂä†„Åó„ÅüÂ†¥Âêà„ÄÅ„Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÅßËá™ÂãïÊ§úÂá∫"
    echo "   - Ê∞ó„Å´ÂÖ•„Å£„Åü„Éó„É™„Çª„ÉÉ„Éà„ÇíÊú¨Áï™„Åß‰ΩøÁî®"
    echo
    echo "üîß ÂÄãÂà•ÂÆüË°å‰æã:"
    echo "   ./test/generate_scrollcast_with_config.sh [template] [preset]"
    exit 0
else
    echo
    echo "‚ö†Ô∏è  ‰∏ÄÈÉ®„ÅÆ„ÉÜ„É≥„Éó„É¨„Éº„Éà„Éª„Éó„É™„Çª„ÉÉ„Éà„ÅßÂïèÈ°å„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü ($success_count/$total_count ÊàêÂäü)"
    echo "   - Â§±Êïó„ÅÆË©≥Á¥∞„ÅØ /tmp/template_output.log „ÇíÁ¢∫Ë™ç"
    echo "   - ÂÄãÂà•ÂÆüË°å„Åß„Éá„Éê„ÉÉ„Ç∞: ./test/generate_scrollcast_with_config.sh [template] [preset]"
    exit 1
fi